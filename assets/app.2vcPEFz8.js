import{d as p,g as d,o as f,c as m,r as h,n as y,a1 as i,v as r,a2 as g,a3 as A,a4 as b,a5 as v,a6 as _,a7 as P,a8 as C,a9 as w,aa as E,ab as R,ac as S,u as j,j as D,z as L,ad as O,ae as T,af as $}from"./chunks/framework.IKXs8zmK.js";import{t as u}from"./chunks/theme.MRoofMQj.js";const x=p({name:"lol-button"}),B=p({...x,props:{type:{}},setup(e){const t=e,a=d(()=>({[`lol-button--${t.type}`]:t.type}));return(n,s)=>(f(),m("button",{class:y(["lol-button",a.value])},[h(n.$slots,"default")],2))}}),k=e=>(e.install=t=>{const a=e.name||e.__name;t.component(a,e)},e),z=k(B),l=Object.freeze(Object.defineProperty({__proto__:null,Button:z},Symbol.toStringTag,{value:"Module"})),F={install:e=>{for(const t in l)e.use(l[t])}},M={extends:u,Layout:()=>i(u.Layout,null,{}),enhanceApp({app:e,router:t,siteData:a}){e.use(F)}};function c(e){if(e.extends){const t=c(e.extends);return{...t,...e,async enhanceApp(a){t.enhanceApp&&await t.enhanceApp(a),e.enhanceApp&&await e.enhanceApp(a)}}}return e}const o=c(M),V=p({name:"VitePressApp",setup(){const{site:e}=j();return D(()=>{L(()=>{document.documentElement.lang=e.value.lang,document.documentElement.dir=e.value.dir})}),e.value.router.prefetchLinks&&O(),T(),$(),o.setup&&o.setup(),()=>i(o.Layout)}});async function I(){const e=H(),t=G();t.provide(A,e);const a=b(e.route);return t.provide(v,a),t.component("Content",_),t.component("ClientOnly",P),Object.defineProperties(t.config.globalProperties,{$frontmatter:{get(){return a.frontmatter.value}},$params:{get(){return a.page.value.params}}}),o.enhanceApp&&await o.enhanceApp({app:t,router:e,siteData:C}),{app:t,router:e,data:a}}function G(){return w(V)}function H(){let e=r,t;return E(a=>{let n=R(a),s=null;return n&&(e&&(t=n),(e||t===n)&&(n=n.replace(/\.js$/,".lean.js")),s=S(()=>import(n),__vite__mapDeps([]))),r&&(e=!1),s},o.NotFound)}r&&I().then(({app:e,router:t,data:a})=>{t.go().then(()=>{g(t.route,a.site),e.mount("#app")})});export{I as createApp};
function __vite__mapDeps(indexes) {
  if (!__vite__mapDeps.viteFileDeps) {
    __vite__mapDeps.viteFileDeps = []
  }
  return indexes.map((i) => __vite__mapDeps.viteFileDeps[i])
}